name: Build
on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: eclipse-temurin:17
    steps:
      - name: Prepare
        run: |
          sed -i "s:/root:$HOME:" /etc/passwd
          apt update
          apt -y install --no-install-recommends unzip bzip2 git
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: mozilla-mobile/firefox-android
          ref: ${{ github.ref }}
      - name: Build
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          wget -q -O commandlinetools-linux.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux.zip -d "$ANDROID_HOME"
          mkdir "$ANDROID_HOME/licenses"
          echo 24333f8a63b6825ea9c5514f83c2829b004d1fee | tee "$ANDROID_HOME/licenses/android-sdk-license"
          mkdir -p "$HOME/.android"
          echo "${{ secrets.SIGN_STORE_DATA }}" | base64 -d >"$HOME/.android/debug.keystore"
          git config --global --add safe.directory "$(pwd)"
          cd fenix
          sed -zi 's/\.aboutConfigEnabled([^()]\+)/.aboutConfigEnabled(true)/' app/src/main/java/org/mozilla/fenix/gecko/GeckoProvider.kt
          sed -i "/org\.gradle\.jvmargs/{s/7g/3584m/;s/6g/384m/}" gradle.properties
          echo "autosignReleaseWithDebugKey" | tee -a local.properties
          ./gradlew --no-daemon -PversionName=${GITHUB_REF##*-v} app:assembleRelease
          curl -X POST -H "Authorization: Bearer ${{ secrets.DEPLOYGATE_TOKEN }}" -F file=@app/build/outputs/apk/fenix/release/app-fenix-arm64-v8a-release.apk https://deploygate.com/api/users/yogpstop/apps
          shred -u "$HOME/.android/debug.keystore"
